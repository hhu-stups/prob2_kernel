final bomProject = project(":prob-java-bom")

subprojects {
	apply(plugin: "maven-publish")
	apply(plugin: "signing")
	
	project.group = 'de.hhu.stups'
	// IMPORTANT: Before releasing the ProB Java API, remember to set probcli and all dependencies to release versions, not nightly/SNAPSHOT!
	// IMPORTANT: Check the variables parserVersion and cliDownloadURL and the dependencies {...} block.
	project.version = "4.15.1-SNAPSHOT"
	project.ext.isSnapshot = project.version.endsWith("-SNAPSHOT")
	project.ext.SOURCE_ENCODING = "UTF-8"
	
	final snapshotsRepoUrl = "https://central.sonatype.com/repository/maven-snapshots/"
	final releasesStagingRepoUrl = "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
	repositories {
		mavenCentral()
		if (isSnapshot) {
			maven {
				name = "sonatype snapshots"
				url = snapshotsRepoUrl
			}
		}
	}
	
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
	
	if (project == bomProject) {
		// Necessary so that the publishing block below can find components.javaPlatform.
		apply(plugin: "java-platform")
	} else {
		// The java-platform and java plugins cannot be applied at the same time,
		// so this part must be skipped for the BOM subproject.
		apply(plugin: "java")
		
		dependencies {
			// The BOM subproject is pulled in by all other subprojects.
			implementation(platform(bomProject))
		}
		
		if (project.hasProperty("probHome")) {
			tasks.withType(JavaForkOptions) {
				systemProperties["prob.home"] = project.probHome
			}
		}
		
		java {
			sourceCompatibility = JavaVersion.VERSION_1_8
			targetCompatibility = JavaVersion.VERSION_1_8
			withSourcesJar()
			withJavadocJar()
		}
		
		tasks.withType(JavaCompile) {
			options.encoding = SOURCE_ENCODING
		}
		
		tasks.withType(Javadoc) {
			options.encoding = SOURCE_ENCODING
		}

		javadoc {
			options {
				// silence warnings on missing javadoc
				addBooleanOption('Xdoclint:all,-missing', true)
			}
		}
	}
	
	publishing {
		publications {
			mavenJava(MavenPublication) {
				// Unfortunately, the java-platform and java plugins use different component names...
				from(components.findByName("javaPlatform") ?: components.java)
				
				pom {
					name = project.name
					url = 'http://www.prob2.de'
					
					licenses {
						license {
							name = 'Eclipse Public License, Version 1.0'
							url = 'http://www.eclipse.org/org/documents/epl-v10.html'
						}
					}
					
					scm {
						connection = 'scm:git:https://github.com/hhu-stups/prob2_kernel.git'
						developerConnection = 'scm:git:git@gitlab.cs.uni-duesseldorf.de:stups/prob/prob2_kernel.git'
						url = 'https://github.com/hhu-stups/prob2_kernel'
					}
					
					developers {
						developer {
							id = 'bendisposto'
							name = 'Jens Bendisposto'
							email = 'jens@bendisposto.de'
						}
					}
				}
			}
		}
		
		repositories {
			maven {
				url = isSnapshot ? snapshotsRepoUrl : releasesStagingRepoUrl
				if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
					credentials {
						username = project.ossrhUsername
						password = project.ossrhPassword
					}
				}
			}
		}
	}
	
	signing {
		sign publishing.publications.mavenJava
	}
	
	ext."signing.secretKeyRingFile" = rootProject.file("secring.gpg").absolutePath
}
