#macro(ruleContent $ruleResults)
	#foreach($ruleResult in $ruleResults)
		#set($ruleName = $ruleResult.getRuleName())
		#set($ruleStatus = $ruleResult.getRuleState())
		#set($tags = $ruleResult.getTags())
		#if($ruleStatus == $status_SUCCESS && ($ruleResult.getNumberOfSuccesses() > 0 || $ruleResult.getNumberOfSuccesses() == -1))
		<div class="rule-header pointer green" onclick="openDetails('rule_$ruleName')">
		#elseif($ruleStatus == $status_SUCCESS)
		<div class="rule-header green">
		#elseif($ruleStatus == $status_FAIL)
		<div class="rule-header pointer red" onclick="openDetails('rule_$ruleName')">
			<span class="icon">&#9888;</span>
		#elseif($ruleStatus == $status_NOT_CHECKED && !$ruleResult.getFailedDependencies().isEmpty())
		<div class="rule-header pointer orange" onclick="openDetails('rule_$ruleName')">
			<span class="icon">&#9888;</span>
		#elseif($ruleStatus == $status_NOT_CHECKED && !$ruleResult.getNotCheckedDependencies().isEmpty())
		<div class="rule-header pointer grey" onclick="openDetails('rule_$ruleName')">
			<span class="icon">&#128712;</span>
		#elseif($ruleStatus == $status_DISABLED)
		<div class="rule-header grey">
		#else
		<div class="rule-header">
		#end
		$ruleName #if($ruleResult.getRuleId()) &ensp;[$ruleResult.getRuleId()] #end
		#if(!$tags.isEmpty()) &emsp; #end
		#foreach($tag in $tags)
			<div class="tag">$tag</div>
		#end
		&emsp;<b>$ruleStatus</b>
	</div>

		#if($ruleResult.getNumberOfViolations() > 0 || $ruleResult.getNumberOfViolations() == -1 ||
			    $ruleResult.getNumberOfSuccesses() > 0 || $ruleResult.getNumberOfSuccesses() == -1 ||
		        !$ruleResult.getFailedDependencies().isEmpty() || !$ruleResult.getNotCheckedDependencies().isEmpty())
			<div class="rule-content" id="rule_$ruleName">
				#if($ruleResult.getNumberOfViolations() > 0)
					<b>$ruleResult.getNumberOfViolations()</b> Violations found:
					<ul>
						#foreach($counterExample in $ruleResult.getCounterExamples())
							<li>($counterExample.getErrorType()) $counterExample.getMessage()</li>
						#end
					</ul>
				#elseif($ruleResult.getNumberOfViolations() == -1)
					Violations cannot be enumerated (infinitely many).
				#end
				#if($ruleResult.getNumberOfSuccesses() > 0)
					<b>$ruleResult.getNumberOfSuccesses()</b> successful checks:
					<ul>
						#foreach($successMessage in $ruleResult.getSuccessMessages())
							<li>($successMessage.getRuleBodyCount()) $successMessage.getMessage()</li>
						#end
					</ul>
				#elseif($ruleResult.getNumberOfSuccesses() == -1)
					Successful checks cannot be enumerated (infinitely many).
				#end
				#if(!$ruleResult.getFailedDependencies().isEmpty())
					Rule could not be checked due to failed dependencies:
					<ul>
						#foreach($failed in $ruleResult.getFailedDependencies())
							<li>$failed</li>
						#end
					</ul>
				#end
				#if(!$ruleResult.getNotCheckedDependencies().isEmpty())
					Rule could not be checked due to unchecked dependencies:
					<ul>
						#foreach($notChecked in $ruleResult.getNotCheckedDependencies())
							<li>$notChecked</li>
						#end
					</ul>
				#end
			</div>
		#end
	#end
#end
<!DOCTYPE html>
<html lang="en">
	<head>
	    <meta charset="UTF-8">
	    <title>Rule Validation Report</title>
	    <style>
	        body {
	            font-family: 'Arial', sans-serif;
	            background-color: #f4f4f4;
	            padding: 40px;
	        }
			.classification-header {
				padding: 10px;
				border-bottom: 1px solid #ddd;
				align-items: center;
				background-color: rgba(117, 117, 117, 0.2);
				cursor: pointer;
			}
	        .classification-list {
	            background-color: #fff;
	            border: 1px solid #ddd;
	            border-radius: 8px;
	            margin-bottom: 20px;
	            overflow: hidden;
	        }
			.rule-list {
				background-color: #fff;
				border: 1px solid #ddd;
				border-radius: 8px;
				overflow: hidden;
			}
			.rule-list.classification {
				margin-left: 20px;
				display: none;
			}
			.rule-list.normal {
				margin-bottom: 20px;
				display: block;
			}
	        .rule-header {
	            padding: 10px;
	            border-bottom: 1px solid #ddd;
	            align-items: center;
	        }
			.rule-header.pointer {
				cursor: pointer;
			}
	        .rule-content {
	            padding: 10px;
	            display: none;
	        }
			.tag {
				display: inline-block;
				padding: 5px 10px;
				background-color: #0099ff;
				color: #fff;
				border-radius: 20px;
			}
	        .red { background-color: rgba(204, 47, 39, 0.3); }
	        .orange { background-color: rgba(255, 154, 0, 0.3); }
	        .green { background-color: rgba(76, 175, 80, 0.3); }
	        .grey { background-color: rgba(117, 117, 117, 0.3); }
			.icon { margin-right: 10px; }
		</style>
	</head>
	<body>
		<h2>Rule Validation Report</h2>
		<hr>
		Checked machine: <b>$machineName</b>
		<div style="line-height:25px;">
			<br>Total number of rules: <b>$numberOfRules</b>
			<br>Number of checked rules: <b>$rulesChecked</b>
			<br>Number of successful rules: <b>$rulesSucceeded</b>
			<br>Number of failed rules: <b>$rulesFailed</b>
			<br>Number of disabled rules: <b>$rulesDisabled</b>
		</div>
		<br>
		#if(!$classificationMap.keySet().isEmpty)
			<div class="classification-list">
				#foreach($classification in $classificationMap.keySet().stream().toList().stream().sorted().collect($Collectors.toList()))
					#set($ruleResults = $classificationMap.get($classification))
				<div class="classification-header" onclick="openDetails('classification_$classification')">
					<b>$classification</b>  ($ruleResults.size())
				</div>
				<div class="rule-list classification" id="classification_$classification">
					#ruleContent($ruleResults)
				</div>
				#end
			</div>
		#end
		#if(!$noClassification.isEmpty())
			<div class="rule-list normal">
				#ruleContent($noClassification)
			</div>
		#end
		Check finished after: $duration
		<br>ProB Version: $probCliVersion
		<br>$localDateTime
		<script>
			function openDetails(contentId) {
				const content = document.getElementById(contentId);
				content.style.display = (content.style.display === 'block') ? 'none' : 'block';
			}
		</script>
	</body>
</html>
